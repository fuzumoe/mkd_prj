 

services:
  django-backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - SECRET_KEY=u9Dy4a1Ldk3Zx2R7Pn8QwS6vBc0Gh1jKl9Mn4Bt2FgH5Vr6Xp7xY
      - DATABASE_URL=sqlite:////app/myproject/db.sqlite3
      - ALLOWED_HOSTS=*
      - PORT=8000
      - STRIPE_SECRET_KEY=sk_test_51H9yTFeR8u1Wh2Lk3Mn4oP6qRs7TuVwXy9ZaBcDeFgHi2JkLm
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
    restart: unless-stopped
    networks:
      - aurora-organics-network

  flask-api:
    build:
      context: ./ai-model-api
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_DEBUG=false
      - SECRET_KEY=4rT8gH2Jk6Lm9Nq1Rv3Tz5Xy7Pw0Ad2Bk4Vf6Gn8Hs0Jd3Lp
      - DATABASE_URL=sqlite:////app/db.sqlite3
      - MODEL_PATH=/app/aurora.h5
      - PORT=5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
    restart: unless-stopped
    networks:
      - aurora-organics-network

  react-frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
    environment:
      - VITE_APP_TITLE=Aurora Organics
      - VITE_DEV_SERVER_PORT=5173
      - VITE_DJANGO_API_URL=http://django-backend:8000
      - VITE_FLASK_API_URL=http://flask-api:5000
      - VITE_STRIPE_PUBLISHABLE_KEY=pk_test_51H9yTFeR8u1Wh2Lk3Mn4oP
      - PORT=80
      - VITE_NODE_ENV=production
      - VITE_API_TIMEOUT=10000
      - VITE_ENABLE_ANALYTICS=false
      - VITE_ENABLE_DEBUG=false
    restart: unless-stopped
    networks:
      - aurora-organics-network

networks:
  aurora-organics-network:
    driver: bridge
